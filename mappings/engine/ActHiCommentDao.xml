<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.act.dao.engine.ActHiCommentDao">
    
	<sql id="actHiCommentColumns">
		a.id_ AS "id",
		a.type_ AS "type",
		a.time_ AS "time",
		a.user_id_ AS "user.id",
		a.task_id_ AS "taskId",
		a.proc_inst_id_ AS "procInstId",
		a.action_ AS "action",
		a.message_ AS "message",
		a.full_msg_ AS "fullMsg",
		u4.name AS "user.name"
	</sql>
	
	<sql id="actHiCommentJoins">
		LEFT JOIN sys_user u4 ON u4.id = a.user_id_
	</sql>
    
	<select id="get" resultType="ActHiComment">
		SELECT 
			<include refid="actHiCommentColumns"/>
		FROM act_hi_comment a
		<include refid="actHiCommentJoins"/>
		WHERE a.id_ = #{id}
	</select>
	
	<select id="findList" resultType="ActHiComment">
		SELECT 
			<include refid="actHiCommentColumns"/>
		FROM act_hi_comment a
		<include refid="actHiCommentJoins"/>
		<where>
			<if test="procInstId != null">
				a.proc_inst_id_=#{procInstId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	<select id="findAllCommentByProcInstId" resultType="ActHiComment">
		SELECT
		<include refid="actHiCommentColumns"/>
		FROM act_hi_comment a
		<include refid="actHiCommentJoins"/>
		join act_hi_taskinst t on a.task_id_=t.id_
		<where>
			<if test="procInstId != null">
				t.proc_inst_id_=#{procInstId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	<select id="findAllList" resultType="ActHiComment">
		SELECT 
			<include refid="actHiCommentColumns"/>
		FROM act_hi_comment a
		<include refid="actHiCommentJoins"/>
		<where>
			<if test="procInstId != null">
				a.proc_inst_id_=#{procInstId}
			</if>
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO act_hi_comment(
			id_,
			type_,
			time_,
			user_id_,
			task_id_,
			proc_inst_id_,
			action_,
			message_,
			full_msg_
		) VALUES (
			#{id},
			#{type},
			#{time},
			#{user.id},
			#{taskId},
			#{procInstId},
			#{action},
			#{message},
			#{fullMsg}
		)
	</insert>

	<insert id="saveBatch">
		INSERT INTO act_hi_comment(
		id_,
		type_,
		time_,
		user_id_,
		task_id_,
		proc_inst_id_,
		action_,
		message_,
		full_msg_
		) VALUES
		<foreach item="item" index="index" collection="list" separator=",">
		 (
		#{item.id},
		#{item.type},
		#{item.time},
		#{item.user.id},
		#{item.taskId},
		#{item.procInstId},
		#{item.action},
		#{item.message},
		#{item.fullMsg}
		)
		</foreach>
	</insert>
	<update id="update">
		UPDATE act_hi_comment SET 	
			id_ = #{id},
			type_ = #{type},
			time_ = #{time},
			user_id_ = #{user.id},
			task_id_ = #{taskId},
			proc_inst_id_ = #{procInstId},
			action_ = #{action},
			message_ = #{message},
			full_msg_ = #{fullMsg}
		WHERE id_ = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM act_hi_comment
		WHERE id_ = #{id}
	</update>
	
</mapper>